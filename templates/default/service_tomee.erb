#!/bin/sh
#
#
### BEGIN INIT INFO
# Provides:          tomee
# Required-Start:    $local_fs $remote_fs $network
# Required-Stop:     $local_fs $remote_fs $network
# Should-Start:      $named
# Should-Stop:       $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start Tomee.
# Description:       Start the Tomcat servlet engine.
### END INIT INFO

set -e

PATH=/bin:/usr/bin:/sbin:/usr/sbin
NAME=<%= @instance %>
SHUTDOWN_TIMEOUT=30 # n. retries * 10 seconds
DESC="Tomee"
ENV_TOMEE="<%= @base %>/bin/setenv.sh"
DAEMON_TOMEE="<%= @base %>/bin/catalina.sh"

JVM_TMP="/tmp"

if [ `id -u` -ne 0 ]; then
  echo "You need root privileges to run this script"
  exit 1
fi
 
# Make sure tomee is started with system locale
if [ -r /etc/default/locale ]; then
  . /etc/default/locale
  export LANG
fi
# The following variables can be overwritten in $ENV_TOMEE

# Default Java options
# Set java.awt.headless=true if JAVA_OPTS is not set so the
# Xalan XSL transformer can work without X11 display on JDK 1.4+
# It also looks like the default heap size of 64M is not enough for most cases
# so the maximum heap size is set to 128M
if [ -z "$JAVA_OPTS" ]; then
  JAVA_OPTS="-Djava.awt.headless=true -Xmx128M"
fi

# End of variables that can be overwritten in $ENV_TOMEE

# overwrite settings from default file
if [ -f "$ENV_TOMEE" ]; then
  . "$ENV_TOMEE"
else
  echo "Env configuration not found, file $ENV_TOMEE missing."
  exit 1
fi

if [ ! -d "$CATALINA_BASE/conf" ]; then
  echo "invalid CATALINA_BASE: $CATALINA_BASE"
  exit 1
fi

if [ ! -f "$CATALINA_HOME/bin/bootstrap.jar" ]; then
  echo "$NAME is not installed"
  exit 1
fi

if [ -z "$CATALINA_TMPDIR" ]; then
  CATALINA_TMPDIR="$JVM_TMP"
fi

# Set the JSP compiler if set in the tomcat7.default file
if [ -n "$JSP_COMPILER" ]; then
  JAVA_OPTS="$JAVA_OPTS -Dbuild.compiler=\"$JSP_COMPILER\""
fi

# Look for Java Secure Sockets Extension (JSSE) JARs
if [ -z "${JSSE_HOME}" -a -r "${JAVA_HOME}/jre/lib/jsse.jar" ]; then
    JSSE_HOME="${JAVA_HOME}/jre/"
fi

if [ ! -f <%= @catalina_pid %> ]; then
    su - $TOMCAT_USER -c "touch <%= @catalina_pid %>"
fi

catalina_start() {
  call_catalina_sh start
}

catalina_stop() {
  if [ -s <%= @catalina_pid %> ]; then
    TEMPFILE=/tmp/$$.<%= @instance %>.counter.tmp
    touch $TEMPFILE
    while (true);
    do 
      call_catalina_sh stop
      if [ -s <%= @catalina_pid %> ]; then
        pid=$(cat <%= @catalina_pid %>)
      else
        break;
      fi
      COUNTER=$[$(cat $TEMPFILE) + 1]
      echo $COUNTER > $TEMPFILE
      ps -p $pid > /dev/null 2>&1
      if [ $? -ne 0 ]
      then 
        echo "Shutted down <%= @instance %> "$pid" (after "$COUNTER" retries)..."
        break
      else
        sleep 10;
      fi
      
  # CHECK FOR TIMEOUT 
      if [ $COUNTER -gt $SHUTDOWN_TIMEOUT ] 
      then
          echo "Warning: Timeout."$COUNTER" Forced shutdown <%= @instance %>"
          kill -9 $pid
          rm <%= @catalina_pid %>
          break;
      fi
    done
  else
    echo "Warning file <%= @catalina_pid %> empty. Already stopped?"
  fi
}

call_catalina_sh() {
  su - $TOMCAT_USER -c "$DAEMON_TOMEE $1"
  status="$?"
  set +a -e
  return $status
}

case "$1" in
  start)
    if [ -z "$JAVA_HOME" ]; then
      echo "no JDK or JRE found - please set JAVA_HOME"
      exit 1
    fi
  
    if [ ! -d "$CATALINA_BASE/conf" ]; then
      echo "invalid CATALINA_BASE: $CATALINA_BASE"
      exit 1
    fi

    echo "Starting $DESC" "$NAME"
    set +e
    catalina_start
    set -e
    ;;
  stop)
    echo "Stopping $DESC" "$NAME"
  
    set +e
    catalina_stop
    set -e
    ;;
  status)
    set +e
    call_catalina_sh status
    set -e
        ;;
  restart|force-reload)
    set +e
    catalina_stop
    sleep 1
    catalina_start
    set -e
        ;;
  *)
  echo "Usage: $0 {start|stop|restart|force-reload|status}"
  exit 1
  ;;
esac

exit 0
